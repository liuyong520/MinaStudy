package com.nnk.coupon.adapter;

import com.nnk.coupon.handler.PharseMessageHandler;
import com.nnk.coupon.service.CouponService;
import org.apache.log4j.Logger;
import org.apache.mina.core.service.IoHandlerAdapter;
import org.apache.mina.core.session.IdleStatus;
import org.apache.mina.core.session.IoSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.task.TaskExecutor;

import java.util.UUID;

/**
 * Created with IntelliJ IDEA.
 * User: y
 * Date: 2016/6/27
 * Time: 14:31
 * email: xxydliuy@163.com
 * To change this template use File | Settings | File Templates.
 */
public class MessgageHandler extends IoHandlerAdapter implements InterfaceDict{
    public static final Logger log = Logger.getLogger(MessgageHandler.class);
    @Autowired
    private TaskExecutor taskExecutor;
    @Autowired
    private CouponService service;
    @Override
    public void sessionCreated(IoSession session) throws Exception {
        super.sessionCreated(session);
        session.setAttribute("UUID", UUID.randomUUID().toString().toUpperCase());
        log.info("sessionCreated:" + session.getAttribute("UUID"));
    }

    @Override
    public void sessionOpened(IoSession session) throws Exception {
        super.sessionOpened(session);
        log.info("sessionOpened:" + session.getAttribute("UUID"));
        log.info("sessionOpened:" + session);
    }

    @Override
    public void sessionClosed(IoSession session) throws Exception {
        super.sessionClosed(session);
        log.info("session 已经关闭，释放连接");
    }

    @Override
    public void sessionIdle(IoSession session, IdleStatus status) throws Exception {
        super.sessionIdle(session, status);

    }

    @Override
    public void exceptionCaught(IoSession session, Throwable cause) throws Exception {
        super.exceptionCaught(session, cause);
        log.error("exceptionCaught:"+session);
    }

    @Override
    public void messageReceived(IoSession session, Object message) throws Exception {
        super.messageReceived(session, message);
        log.info("reciver msg：" + message.toString());
        String messageString = message.toString();

        taskExecutor.execute(new PharseMessageHandler(session,messageString,service));

    }

    @Override
    public void messageSent(IoSession session, Object message) throws Exception {
        super.messageSent(session, message);
    }

    @Override
    public void inputClosed(IoSession session) throws Exception {
        super.inputClosed(session);
    }
}
